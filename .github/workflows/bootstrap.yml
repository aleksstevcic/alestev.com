# This workflow will build a Node.js project and deploy it to an Azure Functions App on Windows or Linux when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure Functions app.
# For instructions see:
#   - https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-node
#   - https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-typescript
#
# To configure this workflow:
# 1. Set up the following secrets in your repository:
#   - AZURE_FUNCTIONAPP_PUBLISH_PROFILE
# 2. Change env variables for your configuration.
#
# For more information on:
#   - GitHub Actions for Azure: https://github.com/Azure/Actions
#   - Azure Functions Action: https://github.com/Azure/functions-action
#   - Publish Profile: https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended
#   - Azure Service Principal for RBAC: https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

name: Deploy Node.js project to Azure Function App

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  ALESTEV_URL: "https://alestev.com/api/n8n/update-site"
  
jobs:
  send-http-request:
    runs-on: ubuntu-latest # For Linux, use ubuntu-latest
    environment: dev
    steps:
    - name: shell
      run: |
        echo "running!"
        
    - name: GitHub Action for HTTP Requests
  # You may pin to the exact commit or the version.
  # uses: ArthurYdalgo/http-request-action@1cb260a7a426b969d3045bcb08fc2fe0b94918e6
      uses: ArthurYdalgo/http-request-action@1.12.1
      with:
        # Request URL
        url: ${{env.ALESTEV_URL}}
        # Request Method
        method: POST
        # Content Type
        contentType: "application/json"
        # Request Body as JSON String
        data: '{}'
        # Custom HTTP Headers
        customHeaders: '{"TOKEN":"${{secrets.N8N_TOKEN}}"}'
        # Prevent this Action to fail if the request respond without an response
        #preventFailureOnNoResponse: false
        # Escape newlines in data string content
        #escapeData: # optional
        # Certificate authority as string in PEM format
        #httpsCA: # optional
